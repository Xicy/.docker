version: '2'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
  default:
    external:
      name: ${NGINX_NET}

volumes:
  data:
    driver: ${VOLUMES_DRIVER}
  mysql:
    driver: ${VOLUMES_DRIVER}
  percona:
    driver: ${VOLUMES_DRIVER}
  mssql:
    driver: ${VOLUMES_DRIVER}
  postgres:
    driver: ${VOLUMES_DRIVER}
  memcached:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  neo4j:
    driver: ${VOLUMES_DRIVER}
  mariadb:
    driver: ${VOLUMES_DRIVER}
  mongo:
    driver: ${VOLUMES_DRIVER}
  minio:
    driver: ${VOLUMES_DRIVER}
  rethinkdb:
    driver: ${VOLUMES_DRIVER}
  phpmyadmin:
    driver: ${VOLUMES_DRIVER}
  adminer:
    driver: ${VOLUMES_DRIVER}
  aerospike:
    driver: ${VOLUMES_DRIVER}
  caddy:
    driver: ${VOLUMES_DRIVER}
  elasticsearch:
    driver: ${VOLUMES_DRIVER}

services:

### Workspace Utilities ##################################
    workspace:
      build:
        context: ./workspace
        args:
          - PHP_VERSION=${PHP_VERSION}
          - INSTALL_SUBVERSION=${WORKSPACE_INSTALL_SUBVERSION}
          - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
          - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
          - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
          - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}
          - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
          - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
          - INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}
          - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
          - INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}
          - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
          - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
          - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
          - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}
          - INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}
          - INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}
          - AEROSPIKE_PHP_REPOSITORY=${AEROSPIKE_PHP_REPOSITORY}
          - INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}
          - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
          - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}
          - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
          - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
          - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
          - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}
          - INSTALL_PRESTISSIMO=${WORKSPACE_INSTALL_PRESTISSIMO}
          - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}
          - INSTALL_MC=${WORKSPACE_INSTALL_MC}
          - INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}
          - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}
          - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}
          - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
          - INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}
          - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}
          - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}
          - INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}
          - PUID=${WORKSPACE_PUID}
          - PGID=${WORKSPACE_PGID}
          - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
          - NODE_VERSION=${WORKSPACE_NODE_VERSION}
          - YARN_VERSION=${WORKSPACE_YARN_VERSION}
          - DRUSH_VERSION=${WORKSPACE_DRUSH_VERSION}
          - TZ=${WORKSPACE_TIMEZONE}
          - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
          - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        - VIRTUAL_HOST=work.${DOMAIN}
        - VIRTUAL_PORT=22
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
        - "localserver:${LocalServer}"
      expose:
        - "22"
      tty: true
      networks:
        - frontend
        - backend
        - default

### PHP-FPM ##############################################
    php-fpm:
      build:
        context: ./php-fpm
        args:
          - PHP_VERSION=${PHP_VERSION}
          - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
          - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
          - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
          - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
          - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
          - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
          - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
          - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
          - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
          - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
          - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
          - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
          - INSTALL_MBSTRING=${PHP_FPM_INSTALL_MBSTRING}
          - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
          - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
          - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
          - AEROSPIKE_PHP_REPOSITORY=${AEROSPIKE_PHP_REPOSITORY}
          - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
          - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
          - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
          - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
          - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
          - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
          - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
          - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
          - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
          - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
      volumes:
        - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
        - "localserver:${LocalServer}"
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        - TZ=Europe/Istanbul
      depends_on:
        - workspace
      networks:
        - backend

### PHP Worker ############################################
    php-worker:
      build:
        context: ./php-worker
        args:
          - PHP_VERSION=${PHP_VERSION}
          - INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}
          - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ./php-worker/supervisord.d:/etc/supervisord.d
      depends_on:
        - workspace
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
        - "localserver:${LocalServer}"
      networks:
        - backend

### NGINX Server #########################################
    nginx:
      build:
        context: ./nginx
        args:
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
      environment:
        - VIRTUAL_HOST=${DOMAIN}, ${DOMAINS}
        - VIRTUAL_PORT=80
        - LETSENCRYPT_HOST=${DOMAIN}, ${DOMAINS}
        - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      expose:
        - "80"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend
        - default

### Blackfire ########################################
    blackfire:
      image: blackfire/blackfire
      environment:
        - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID}
        - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN}
      depends_on:
        - php-fpm
      networks:
        - backend

### Apache Server ########################################
    apache2:
      build:
        context: ./apache2
        args:
          - PHP_UPSTREAM_CONTAINER=${APACHE_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${APACHE_PHP_UPSTREAM_PORT}
          - PHP_UPSTREAM_TIMEOUT=${APACHE_PHP_UPSTREAM_TIMEOUT}
          - DOCUMENT_ROOT=${APACHE_DOCUMENT_ROOT}
      environment:
        - VIRTUAL_HOST=${DOMAIN}, ${DOMAINS}
        - VIRTUAL_PORT=80
        - LETSENCRYPT_HOST=${DOMAIN}, ${DOMAINS}
        - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${APACHE_SITES_PATH}:/etc/apache2/sites-available
      expose:
        - "80"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend
        - default

### HHVM #################################################
    hhvm:
      build: ./hhvm
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      expose:
        - "9000"
      depends_on:
        - workspace
      networks:
        - frontend
        - backend
        - default

### Minio ################################################
    minio:
      build: ./minio
      volumes:
        - ${DATA_PATH_HOST}/minio/data:/export
        - ${DATA_PATH_HOST}/minio/config:/root/.minio
      expose:
        - "9000"
      environment:
        - MINIO_ACCESS_KEY=access
        - MINIO_SECRET_KEY=secretkey
        - VIRTUAL_HOST=minio.${DOMAIN}
        - VIRTUAL_PORT=9000
        - LETSENCRYPT_HOST=minio.${DOMAIN}
        - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      networks:
        - frontend
        - backend
        - default

### MySQL ################################################
    mysql:
      build:
        context: ./mysql
        args:
          - MYSQL_VERSION=${MYSQL_VERSION}
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${WORKSPACE_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      expose:
        - "3306"
      networks:
        - backend

### Percona ################################################
    percona:
      build:
        context: ./percona
      environment:
        - MYSQL_DATABASE=${PERCONA_DATABASE}
        - MYSQL_USER=${PERCONA_USER}
        - MYSQL_PASSWORD=${PERCONA_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${PERCONA_ROOT_PASSWORD}
      volumes:
        - ${DATA_PATH_HOST}/percona:/var/lib/mysql
        - ${PERCONA_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      expose:
        - "3306"
      networks:
        - backend

### MSSQL ################################################
    mssql:
      build:
        context: ./mssql
      environment:
        - MSSQL_DATABASE=${MSSQL_DATABASE}
        - SA_PASSWORD=${MSSQL_PASSWORD}
        - ACCEPT_EULA=Y
      volumes:
        - ${DATA_PATH_HOST}/mssql:/var/opt/mssql
      expose:
        - "1433"
      networks:
        - backend

### MariaDB ##############################################
    mariadb:
      build: ./mariadb
      volumes:
        - ${DATA_PATH_HOST}/mariadb:/var/lib/mysql
        - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      expose:
        - "3306"
      environment:
        - MYSQL_DATABASE=${MARIADB_DATABASE}
        - MYSQL_USER=${MARIADB_USER}
        - MYSQL_PASSWORD=${MARIADB_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      networks:
        - backend

### PostgreSQL ###########################################
    postgres:
      build: ./postgres
      volumes:
        - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      expose:
        - "5432"
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      networks:
        - backend

### PostgreSQL PostGis ###################################
    postgres-postgis:
      build: ./postgres-postgis
      volumes:
        - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      expose:
        - "5432"
      environment:
        - POSTGRES_DB=${POSTGRES_DB}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      networks:
        - backend

### Neo4j ################################################
    neo4j:
      build: ./neo4j
      expose:
        - "7474"
        - "1337"
      environment:
        - NEO4J_AUTH=default:secret
      volumes:
        - ${DATA_PATH_HOST}/neo4j:/var/lib/neo4j/data
      networks:
        - backend

### MongoDB ##############################################
    mongo:
      build: ./mongo
      expose:
        - "27017"
      volumes:
        - ${DATA_PATH_HOST}/mongo:/data/db
      networks:
        - backend

### RethinkDB ##############################################
    rethinkdb:
      build: ./rethinkdb
      expose:
        - "8080"
      volumes:
        - ${DATA_PATH_HOST}/rethinkdb:/data/rethinkdb_data
      networks:
        - backend

### Redis ################################################
    redis:
      build: ./redis
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      expose:
        - "6379"
      networks:
        - backend

### Aerospike ##########################################
    aerospike:
      build: ./aerospike
      volumes:
        - workspace
        - ${DATA_PATH_HOST}/aerospike:/opt/aerospike/data
      expose:
        - "3000"
        - "3001"
        - "3002"
        - "3003"
      networks:
        - backend

### Memcached ############################################
    memcached:
      build: ./memcached
      volumes:
        - ${DATA_PATH_HOST}/memcached:/var/lib/memcached
      expose:
        - "11211"
      depends_on:
        - php-fpm
      networks:
        - backend

### Beanstalkd ###########################################
    beanstalkd:
      build: ./beanstalkd
      expose:
        - "11300"
      privileged: true
      depends_on:
        - php-fpm
      networks:
        - backend

### RabbitMQ #############################################
    rabbitmq:
      build: ./rabbitmq
      expose:
        - "5672"
        - "15672"
        - "15671"
      privileged: true
      environment:
        - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      depends_on:
        - php-fpm
      networks:
        - backend

### Beanstalkd Console ###################################
    beanstalkd-console:
      build: ./beanstalkd-console
      expose:
        - "2080"
      depends_on:
        - beanstalkd
      networks:
        - backend

### Caddy Server #########################################
    caddy:
      build: ./caddy
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${CADDY_CUSTOM_CADDYFILE}:/etc/Caddyfile
        - ${DATA_PATH_HOST}:/root/.caddy
      environment:
           - VIRTUAL_HOST=${DOMAIN}, ${DOMAINS}
           - VIRTUAL_PORT=80
           - LETSENCRYPT_HOST=${DOMAIN}, ${DOMAINS}
           - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      expose:
        - "80"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend
        - default

### phpMyAdmin ###########################################
    phpmyadmin:
      build: ./phpmyadmin
      environment:
        - VIRTUAL_HOST=pma.${DOMAIN}
        - VIRTUAL_PORT=80
        - LETSENCRYPT_HOST=pma.${DOMAIN}
        - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
        - PMA_ARBITRARY=0
        - PMA_HOSTS=mysql,localserver
        - MYSQL_USER=${PMA_USER}
        - MYSQL_PASSWORD=${PMA_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
      expose:
        - "80"
      extra_hosts:
        - "localserver:${LocalServer}"
      depends_on:
        - "${PMA_DB_ENGINE}"
      networks:
        - frontend
        - backend
        - default

### Adminer ###########################################
    adminer:
      build:
        context: ./adminer
        args:
          - INSTALL_MSSQL=${ADM_INSTALL_MSSQL}
      expose:
        - "8080"
      environment:
          - VIRTUAL_HOST=adminer.${DOMAIN}
          - VIRTUAL_PORT=8080
          - LETSENCRYPT_HOST=adminer.${DOMAIN}
          - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      depends_on:
        - php-fpm
      extra_hosts:
        - "localserver:${LocalServer}"
      networks:
        - frontend
        - backend
        - default

### pgAdmin ##############################################
    pgadmin:
      build: ./pgadmin
      expose:
        - "5050"
      environment:
          - VIRTUAL_HOST=pgadmin.${DOMAIN}
          - VIRTUAL_PORT=5050
          - LETSENCRYPT_HOST=pgadmin.${DOMAIN}
          - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      volumes:
        - ${DATA_PATH_HOST}/pgadmin-backup:/var/lib/pgadmin/storage/pgadmin4
      extra_hosts:
        - "localserver:${LocalServer}"
      depends_on:
        - postgres
      networks:
        - frontend
        - backend
        - default

### ElasticSearch ########################################
    elasticsearch:
      build: ./elasticsearch
      volumes:
        - elasticsearch:/usr/share/elasticsearch/data
      environment:
        - cluster.name=mediaclick-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      expose:
        - "9200"
        - "9300"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend
        - default


### Kibana ##############################################
    kibana:
      build: ./kibana
      expose:
        - "5601"
      environment:
          - VIRTUAL_HOST=kibana.${DOMAIN}
          - VIRTUAL_PORT=5601
          - LETSENCRYPT_HOST=kibana.${DOMAIN}
          - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      depends_on:
        - elasticsearch
      networks:
        - frontend
        - backend
        - default

### Mailhog ################################################
    mailhog:
      build: ./mailhog
      expose:
        - "1025"
        - "8025"
      networks:
        - frontend
        - backend

### MailDev ##############################################
    maildev:
      build: ./maildev
      expose:
        - "80"
        - "25"
      environment:
        - VIRTUAL_HOST=mail.${DOMAIN}
        - VIRTUAL_PORT=80
        - LETSENCRYPT_HOST=mail.${DOMAIN}
        - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      networks:
        - frontend
        - backend
        - default

### Selenium ###############################################
    selenium:
      build: ./selenium
      expose:
        - "4444"
      volumes:
        - /dev/shm:/dev/shm
      networks:
        - frontend

### Varnish ##########################################
    proxy:
      build: ./varnish
      expose:
        - ${VARNISH_PORT}
      environment:
        - VARNISH_CONFIG=${VARNISH_CONFIG}
        - CACHE_SIZE=${VARNISH_PROXY1_CACHE_SIZE}
        - VARNISHD_PARAMS=${VARNISHD_PARAMS}
        - VARNISH_PORT=${VARNISH_PORT}
        - BACKEND_HOST=${VARNISH_PROXY1_BACKEND_HOST}
        - BACKEND_PORT=${VARNISH_BACKEND_PORT}
        - VARNISH_SERVER=${VARNISH_PROXY1_SERVER}
      links:
        - workspace
      networks:
        - frontend
        - default

    proxy2:
      build: ./varnish
      expose:
        - ${VARNISH_PORT}
      environment:
        - VARNISH_CONFIG=${VARNISH_CONFIG}
        - CACHE_SIZE=${VARNISH_PROXY2_CACHE_SIZE}
        - VARNISHD_PARAMS=${VARNISHD_PARAMS}
        - VARNISH_PORT=${VARNISH_PORT}
        - BACKEND_HOST=${VARNISH_PROXY2_BACKEND_HOST}
        - BACKEND_PORT=${VARNISH_BACKEND_PORT}
        - VARNISH_SERVER=${VARNISH_PROXY2_SERVER}
      links:
        - workspace
      networks:
        - frontend
        - default

### HAProxy ####################################
    haproxy:
      build: ./haproxy
      expose:
        - "8085"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      links:
        - proxy
        - proxy2

### Jenkins ###################################################
    jenkins:
      build: ./jenkins
      environment:
        JAVA_OPTS: "-Djava.awt.headless=true"
      expose:
        - "50000"
        - "8080"
      privileged: true
      volumes:
        - ${JENKINS_HOME}:/var/jenkins_home
        - /var/run/docker.sock:/var/run/docker.sock
      networks:
        - frontend
        - backend

### Grafana ################################################
    grafana:
      build:
        context: ./grafana
      volumes:
        - ${DATA_PATH_HOST}/grafana:/var/lib/grafana
      expose:
        - "3000"
      networks:
        - backend

### Laravel Echo Server #######################################
    laravel-echo-server:
      build:
        context: ./laravel-echo-server
      volumes:
        - ./laravel-echo-server/laravel-echo-server.json:/app/laravel-echo-server.json:ro
      expose:
        - "6001"
      links:
        - redis
      networks:
        - frontend
        - backend
        
### Solr ################################################
    solr:
      build:
        context: ./solr
        args:
          - SOLR_VERSION=${SOLR_VERSION}
          - SOLR_DATAIMPORTHANDLER_MYSQL=${SOLR_DATAIMPORTHANDLER_MYSQL}
      volumes:
        - ${DATA_PATH_HOST}/solr:/opt/solr/server/solr/mycores
      expose:
        - "8983"
      networks:
        - backend

### AWS EB-CLI ################################################
    aws:
      build:
        context: ./aws
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
      depends_on:
        - workspace
      tty: true
